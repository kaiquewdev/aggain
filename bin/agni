#!/usr/bin/env node
var agni = require('../');
var agniCli = require('commander');
var pkg = require('../package');

agniCli
  .version(pkg.version)
  .option('-u, --up', 'Fire up the agni engine, in a existing structure.')
  .option('-s, --start [name]', 'Start up the agni engine, for the first time.')
  .option('-m, --module [name]', 'Create an module file.')
  .option('-md, --middleware [name]', 'Create an express middleware file or works with route command to address existing middlewares to and route.')
  .option('-r, --route [uri] [method] [name] [middlewares] [controller] [view] or [rest]', 'Create route file with supply options.')
  .option('-u, --uri [path]', 'Work with route command to put a route in a method.')
  .option('-mt, --method [name]', 'Work with route command to put an method on route.')
  .option('-sc, --schema [name]', 'Create a schema to work with model')
  .option('-mm, --model [name]', 'Create a model file to work with schema, modules or plugins.')
  .option('-p, --plugin [name]', 'Create a plugin file to work with model.')
  .option('-c, --controller [name]', 'Create a controller or work with route to address and existing controller.')
  .option('-v, --view [name]', 'Create a view or work with route command to address to a controller rendering trigger.')
  .option('-b, --bin [name]', 'Create an executable file.')
  .option('-d, --doc [name]', 'Create an doc file.')
  .option('-dm, --doc-man [name]', 'Create an manual file.')
  .option('-ci, --continuous-integration', 'Create a continuos integration configuration file.')
  .option('-cf, --configuration [name]', 'Create a configuration file.')
  .option('-t, --track [name]', 'Create a track event.')
  .option('-l, --log-pipe [name]', 'Create a log pipe configuration.')
  .option('-w, --web-admin [port]', 'Run a web admin application of agni.')
  .option('-j, --job [name]', 'Create a job file with consumer and producer.')
  .parse(process.argv);

// start of triggers area
// -------
// body:todo
// -------
// end of triggers area
